import org.gradle.api.DefaultTask

/**
 * 
 * @author haghard
 *
 */
class StatusException extends RuntimeException {
  public final int status
  StatusException(String message, int status0) {
    super("[Status ${status0}]: ${message}")
    status = status0
  }
  StatusException(Throwable cause, int status0) {
    super(cause)
    status = status0
  }
}

//Subclassing from DefaultTask is a more approptiate way for your own task 
class ProcessRunTask extends DefaultTask {
  //script the shell script to execute
  @Input String commandScript
  //doFailOnNonZeroExitCode if the script should
  @Input boolean doFailOnNonZeroExitCode
  
  @TaskAction public void run() {
    def process = ["/bin/bash", "-s"].execute()
    process.withWriter { it.write(commandScript) }
    process.consumeProcessOutput(System.out, System.err)
    def code = process.waitFor()
    if (doFailOnNonZeroExitCode & code != 0) throw new StatusException("Command [${scriptBody}] failed with exit code ${code}.", code)
  }
}

task runScript(type: ProcessRunTask) {
  doFailOnNonZeroExitCode false
  commandScript = ''

  if (project.hasProperty('scriptBody')) 
    commandScript = scriptBody
  if (project.hasProperty('doFailOnNonZeroExitCode'))
    doFailOnNonZeroExitCode true
}
